type Poll {
  id: ID!
  options: [Option!]!
  expiresAt: Int!
}

type Option {
  name: String!
  votes: Int!
}

input OptionsInput {
  names: [String!]!
}

input VoteInput {
  id: ID!
  option: String
}

type VoteResponse {
  message: String!
}

type CreatePollResponse {
  id: ID
  error: String
}

type Query {
  getPoll(id: ID!): Poll
}

type Mutation {
  createPoll(options: OptionsInput!): CreatePollResponse!
  vote(vote: VoteInput!): VoteResponse!
}

type Subscription {
  watchPoll(id: ID!): [Option!]
}
